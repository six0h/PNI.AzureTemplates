{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "type": "string"
    },
    "domainUsername": {
      "type": "string"
    },
    "domainPassword": {
      "type": "string"
    },
    "count": {
      "type": "int",
      "defaultValue": 2
    },
    "existingAdPDCVMName": {
      "type": "string"
    },
    "domainName": {
      "type": "string"
    },
    "lbSubnetUri": {
      "type": "string"
    },
    "namePrefix": {
      "type": "string"
    },
    "nicSubnetUri": {
      "type": "string"
    },
    "sqlLBIPAddress": {
      "type": "string"
    },
    "sqlServerServiceAccountPassword": {
      "type": "securestring"
    },
    "sqlServerServiceAccountUserName": {
      "type": "string"
    },
    "sqlVMSize": {
      "type": "string"
    },
    "sqlWitnessVMSize": {
      "type": "string"
    },
    "storageAccountType": {
      "type": "securestring"
    },
    "windowsImageOffer": {
      "type": "string",
      "defaultValue": "SQL2016SP1-WS2016"
    },
    "windowsImagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftSQLServer"
    },
    "windowsImageSKU": {
      "type": "string",
      "defaultValue": "Enterprise"
    },
    "windowsImageVersion": {
      "type": "string",
      "defaultValue": "latest"
    }
  },
	"variables": {
		"apiVersionStorage": "2015-06-15",
		"sqlDiskSize": 1000,
		"sqlWitnessDiskSize": 128,
		"sqlAvailabilitySetName": "[concat(parameters('namePrefix'),'av')]",
    "sqlLBName": "[concat(parameters('namePrefix'),'li')]",
		"sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('sqlLBName'))]",
		"lbFE1": "[concat(parameters('namePrefix'),'fe1')]",
		"lbBE": "[concat(parameters('namePrefix'),'be')]",
    "sqlLBID": "[resourceId('Microsoft.Network/loadBalancers',variables('sqlLBName'))]",
		"sqlLBFEConfigID1": "[concat(variables('sqllbID'),'/frontendIPConfigurations/',variables('lbFE1'))]",
		"sqlLBBEAddressPoolID": "[concat(variables('sqllbID'),'/backendAddressPools/',variables('lbBE'))]",
		"sqlAOProbe1": "[concat(parameters('namePrefix'),'hb')]",
		"sqlLBProbeID1": "[concat(variables('sqllbID'),'/probes/',variables('sqlAOProbe1'))]",
    "sqlStorageAccountPrefix": "[parameters('namePrefix')]",
    "sqlWitnessStorageAccountName": "[concat(parameters('namePrefix'),'w')]",
		"vmContainerName": "vhds",
		"deploySqlWitnessShare": "deploySqlWitnessShare",
		"deploySqlWitnessShareId": "[concat('Microsoft.Resources/deployments/', variables('deploySqlWitnessShare'))]",
		"deploySqlWitnessShareTemplateUrl": "[concat(parameters('_artifactsLocation'),'/nested/deploy-sql-witness.json',parameters('_artifactsLocationSasToken'))]",
		"sqlWitnessSharePath": "[parameters('namePrefix')]",
    "sqlWitnessVMName": "[parameters('namePrefix')]",
		"deploySqlAlwaysOn": "deploySqlAlwaysOn",
		"deploySqlAlwaysOnTemplateUrl": "[concat(parameters('_artifactsLocation'),'/nested/deploy-sql-alwayson.json',parameters('_artifactsLocationSasToken'))]",
    "sqlAOEPName": "[concat(parameters('namePrefix'),0)]",
		"sqlAOAGName1": "[concat(parameters('namePrefix'),1)]",
    "sqlAOListener1": "[concat(parameters('namePrefix'),1)]"
	},
	"resources": [
		{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('sqlAvailabilitySetName')]",
			"apiVersion": "2015-06-15",
			"location": "[resourceGroup().location]",
			"properties": {}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(variables('sqlStorageAccountPrefix'), copyindex())]",
			"apiVersion": "2015-06-15",
			"copy": {
				"name": "storageAccountLoop",
				"count": "[parameters('count')]"
			},
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('sqlWitnessStorageAccountName')]",
			"apiVersion": "2015-06-15",
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},
		{
			"apiVersion": "2015-06-15",
			"name": "[variables('sqlLBName')]",
			"type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
			"dependsOn": [],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('lbFE1')]",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress": "[parameters('sqlLBIPAddress')]",
							"subnet": {
								"id": "[parameters('lbSubnetUri')]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('lbBE')]"
					}
				],
				"loadBalancingRules": [
					{
						"name": "[variables('sqlAOListener1')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('sqlLBFEConfigID1')]"
							},
							"backendAddressPool": {
								"id": "[variables('sqlLBBEAddressPoolID')]"
							},
							"probe": {
								"id": "[variables('sqlLBProbeID1')]"
							},
							"protocol": "Tcp",
							"frontendPort": 1433,
							"backendPort": 1433,
							"enableFloatingIP": true
						}
					}
				],
				"probes": [
					{
						"name": "[variables('sqlAOProbe1')]",
						"properties": {
							"protocol": "Tcp",
							"port": 59999,
							"intervalInSeconds": 5,
							"numberOfProbes": 2
						}
					}
				]
			}
		},
		{
      "name": "[concat(parameters('namePrefix'), copyindex())]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "2015-06-15",
			"copy": {
				"name": "nicLoop",
        "count": "[parameters('count')]"
			},
			"dependsOn": [
				"[variables('sqlLBID')]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[parameters('nicSubnetUri')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id": "[variables('sqlLBBEAddressPoolID')]"
								}
							]
						}
					}
				]
			}
		},
		{
      "name": "[concat(variables('sqlWitnessVMName'))]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "2015-06-15",
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[parameters('nicSubnetUri')]"
							}
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-06-15",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(parameters('namePrefix'), copyindex())]",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "virtualMachineLoop",
        "count": "[parameters('count')]"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(variables('sqlStorageAccountPrefix'),  copyindex()))]",
        "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('namePrefix'), copyindex()))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
			],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('SqlVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('namePrefix'), copyindex())]",
          "adminUsername": "[parameters('sqlServerServiceAccountUserName')]",
          "adminPassword": "[parameters('sqlServerServiceAccountPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('windowsImagePublisher')]",
            "offer": "[parameters('windowsImageOffer')]",
            "sku": "[parameters('windowsImageSKU')]",
            "version": "[parameters('windowsImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(parameters('namePrefix'), copyindex(), 'os.vhd')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('sqlStorageAccountPrefix'),copyIndex()),variables('apiVersionStorage')).primaryEndpoints.blob, variables('vmContainerName'), '/', parameters('namePrefix'), copyindex(), 'os.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('sqlStorageAccountPrefix'),copyIndex()),variables('apiVersionStorage')).primaryEndpoints.blob, variables('vmContainerName'), '/', parameters('namePrefix'), copyindex(), 'st1.vhd')]"
              },
              "name": "[concat(parameters('namePrefix'), copyindex(), 'st1.vhd')]",
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "[variables('sqlDiskSize')]",
              "lun": 0
            },
            {
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('sqlStorageAccountPrefix'),copyIndex()),variables('apiVersionStorage')).primaryEndpoints.blob, variables('vmContainerName'), '/', parameters('namePrefix'), copyindex(), 'st2.vhd')]"
              },
              "name": "[concat(parameters('namePrefix'), copyindex(), 'st2.vhd')]",
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "[variables('sqlDiskSize')]",
              "lun": 1
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('namePrefix'), copyindex()))]"
            }
          ]
        }
      }
		},
		{
			"apiVersion": "2015-06-15",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('sqlWitnessVMName')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',variables('sqlWitnessStorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlWitnessVMName')))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('SqlWitnessVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
				},
				"osProfile": {
					"computerName": "[variables('sqlWitnessVMName')]",
					"adminUsername": "[parameters('sqlServerServiceAccountUserName')]",
          "adminPassword": "[parameters('sqlServerServiceAccountPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('windowsImagePublisher')]",
						"offer": "[parameters('windowsImageOffer')]",
            "sku": "[parameters('windowsImageSKU')]",
						"version": "[parameters('windowsImageVersion')]"
					},
					"osDisk": {
						"name": "[concat(variables('sqlWitnessVMName'), 'os.vhd')]",
						"vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('sqlWitnessStorageAccountName')),variables('apiVersionStorage')).primaryEndpoints.blob, variables('vmContainerName'), '/', variables('sqlWitnessVMName'), 'os.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('sqlWitnessStorageAccountName')),variables('apiVersionStorage')).primaryEndpoints.blob, variables('vmContainerName'), '/', variables('sqlWitnessVMName'), 'st.vhd')]"
							},
              "name": "[concat(variables('sqlWitnessVMName'), 'st.vhd')]",
							"caching": "None",
							"createOption": "Empty",
							"diskSizeGB": "[variables('sqlWitnessDiskSize')]",
							"lun": 0
						}
					]
				},
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlWitnessVMName')))]"
            }
          ]
        }
			}
		},
		{
			"name": "[variables('deploySqlWitnessShare')]",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines',variables('sqlWitnessVMName'))]"
			],
			"properties": {
        "mode": "Incremental",
				"templateLink": {
					"uri": "[variables('deploySqlWitnessShareTemplateUrl')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"sqlWitnessVMName": {
						"value": "[variables('sqlWitnessVMName')]"
					},
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "domainUsername": {
            "value": "[parameters('domainUsername')]"
          },
          "domainPassword": {
            "value": "[parameters('domainPassword')]"
          },
					"sharePath": {
            "value": "[variables('sqlWitnessSharePath')]"
					},
					"_artifactsLocation": {
						"value": "[parameters('_artifactsLocation')]"
					},
					"_artifactsLocationSasToken": {
						"value": "[parameters('_artifactsLocationSasToken')]"
					}
				}
			}
		},
		{
			"name": "[variables('deploySqlAlwaysOn')]",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('namePrefix'),'0'))]",
        "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('namePrefix'),'1'))]",
				"[variables('deploySqlWitnessShareId')]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
          "uri": "[variables('deploySqlAlwaysOnTemplateUrl')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"domainName": {
						"value": "[parameters('domainName')]"
					},
					"domainUsername": {
						"value": "[parameters('domainUsername')]"
					},
					"domainPassword": {
						"value": "[parameters('domainPassword')]"
					},
					"namePrefix": {
						"value": "[parameters('namePrefix')]"
					},
					"sharePath": {
						"value": "[variables('sqlWitnessSharePath')]"
					},
					"sqlWitnessVMName": {
						"value": "[variables('sqlWitnessVMName')]"
					},
					"sqlLBName": {
						"value": "[variables('sqlLBName')]"
					},
					"sqlLBIPAddress": {
						"value": "[parameters('sqlLBIPAddress')]"
					},
          "existingAdPDCVMName": {
            "value": "[parameters('existingAdPDCVMName')]"
          },
					"sqlServerServiceAccountUserName": {
						"value": "[parameters('sqlServerServiceAccountUserName')]"
					},
					"sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')]"
					},
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
					"_artifactsLocationSasToken": {
						"value": "[parameters('_artifactsLocationSasToken')]"
					},
					"sqlAlwaysOnEndpointName": {
						"value": "[variables('sqlAOEPName')]"
					},
					"sqlAlwaysOnAvailabilityGroupName1": {
						"value": "[variables('sqlAOAGName1')]"
					},
					"sqlAlwaysOnAvailabilityGroupListenerName1": {
						"value": "[variables('sqlAOListener1')]"
					}
				}
			}
		}
	],
	"outputs": {}
}